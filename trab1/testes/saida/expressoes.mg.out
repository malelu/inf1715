INT
ID->main
OPEN_PARENTHESIS
ID->void
CLOSE_PARENTHESIS
ERROR->{
INT
ID->a
EQUAL
NUMINT->8
COMMA
ID->c
COMMA
ID->d
ERROR->;
ID->float
ID->b
EQUAL
NUMINT->4
ERROR->.
NUMINT->5
ERROR->;
ID->float
ID->s
EQUAL
ID->a
PLUS
ID->b
ERROR->;
ID->c
EQUAL
OPEN_PARENTHESIS
ID->a
MINUS
NUMINT->6
CLOSE_PARENTHESIS
DIVIDED
NUMINT->2
ERROR->;
ID->d
EQUAL
ID->c
TIMES
NUMINT->4
ERROR->;
IF
OPEN_PARENTHESIS
ID->a
EQUAL
EQUAL
NUMINT->8
ERROR->|
ERROR->|
ID->b
ERROR->!
EQUAL
NUMINT->9
CLOSE_PARENTHESIS
ERROR->{
ID->d
EQUAL
NUMINT->5
ERROR->;
ERROR->}
ELSE
IF
OPEN_PARENTHESIS
ERROR->!
ID->d
ERROR->&
ERROR->&
ID->f
GREATER
NUMINT->6
CLOSE_PARENTHESIS
ERROR->{
NEW
INT
OPEN_BRACKET
NUMINT->4
MINUS
NUMINT->2
CLOSE_BRACKET
ERROR->;
ERROR->}
RET
NUMINT->0
ERROR->;
ERROR->}
