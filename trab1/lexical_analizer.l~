 /* declarations */
%{
#define IF 100
#define ELSE 101
#define STRING 200
#define ERROR 999999

int done = 0;

%}

%%
 /* regular expressions */
\"([^\n"\\]|\\["\\])*\" { return STRING; }


 /* tokens */
if { return IF; }
else { return ELSE; }
while { return WHILE; }
return { return RETURN; }
new { return NEW; }
void { return VOID; }
int { return INT; }
float { return FLOAT; }
char { return CHAR; }
bool { return TRUE; }
true { return TRUE; }
false { return FALSE; }
 

"(" { return OPEN_PARENTHESIS; }
")" { return CLOSE_PARENTHESIS; }

([ \t\n]*) { }

. { return ERROR; }

%%

yywrap() {
	done = 1;
}

int main() {
	while (!done) {
		printf("%s\n", yytext);
	}
	return 0;
}


