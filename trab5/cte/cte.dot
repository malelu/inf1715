// Generated by GNU Bison 2.5.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "cte.y"
{
  0 [label="0\n$accept -> . program $end"]
  0 -> 1 [style=solid label="STRING"]
  0 -> 2 [style=dashed label="program"]
  0 -> 3 [style=dashed label="strings"]
  0 -> 4 [style=dashed label="string"]
  1 [label="1\nstring -> STRING . ID '=' LITSTRING nl"]
  1 -> 5 [style=solid label="ID"]
  2 [label="2\n$accept -> program . $end"]
  2 -> 6 [style=solid label="$end"]
  3 [label="3\nprogram -> strings . globals functions"]
  3 -> 7 [style=solid label="GLOBAL"]
  3 -> 8 [style=dashed label="globals"]
  3 -> 9 [style=dashed label="global"]
  4 [label="4\nstrings -> string . strings"]
  4 -> 1 [style=solid label="STRING"]
  4 -> 10 [style=dashed label="strings"]
  4 -> 4 [style=dashed label="string"]
  5 [label="5\nstring -> STRING ID . '=' LITSTRING nl"]
  5 -> 11 [style=solid label="'='"]
  6 [label="6\n$accept -> program $end ."]
  7 [label="7\nglobal -> GLOBAL . ID nl"]
  7 -> 12 [style=solid label="ID"]
  8 [label="8\nprogram -> strings globals . functions"]
  8 -> 13 [style=solid label="FUN"]
  8 -> 14 [style=dashed label="functions"]
  8 -> 15 [style=dashed label="function"]
  9 [label="9\nglobals -> global . globals"]
  9 -> 7 [style=solid label="GLOBAL"]
  9 -> 16 [style=dashed label="globals"]
  9 -> 9 [style=dashed label="global"]
  10 [label="10\nstrings -> string strings ."]
  11 [label="11\nstring -> STRING ID '=' . LITSTRING nl"]
  11 -> 17 [style=solid label="LITSTRING"]
  12 [label="12\nglobal -> GLOBAL ID . nl"]
  12 -> 18 [style=solid label="NL"]
  12 -> 19 [style=dashed label="nl"]
  13 [label="13\nfunction -> FUN . ID '(' args ')' nl commands"]
  13 -> 20 [style=solid label="ID"]
  14 [label="14\nprogram -> strings globals functions ."]
  15 [label="15\nfunctions -> function . functions"]
  15 -> 13 [style=solid label="FUN"]
  15 -> 21 [style=dashed label="functions"]
  15 -> 15 [style=dashed label="function"]
  16 [label="16\nglobals -> global globals ."]
  17 [label="17\nstring -> STRING ID '=' LITSTRING . nl"]
  17 -> 18 [style=solid label="NL"]
  17 -> 22 [style=dashed label="nl"]
  18 [label="18\nnl -> NL . opt_nl"]
  18 -> 23 [style=solid label="NL"]
  18 -> 24 [style=dashed label="opt_nl"]
  19 [label="19\nglobal -> GLOBAL ID nl ."]
  20 [label="20\nfunction -> FUN ID . '(' args ')' nl commands"]
  20 -> 25 [style=solid label="'('"]
  21 [label="21\nfunctions -> function functions ."]
  22 [label="22\nstring -> STRING ID '=' LITSTRING nl ."]
  23 [label="23\nopt_nl -> NL . opt_nl"]
  23 -> 23 [style=solid label="NL"]
  23 -> 26 [style=dashed label="opt_nl"]
  24 [label="24\nnl -> NL opt_nl ."]
  25 [label="25\nfunction -> FUN ID '(' . args ')' nl commands"]
  25 -> 27 [style=solid label="ID"]
  25 -> 28 [style=dashed label="args"]
  25 -> 29 [style=dashed label="arg"]
  26 [label="26\nopt_nl -> NL opt_nl ."]
  27 [label="27\narg -> ID ."]
  28 [label="28\nfunction -> FUN ID '(' args . ')' nl commands"]
  28 -> 30 [style=solid label="')'"]
  29 [label="29\nargs -> arg . more_args"]
  29 -> 31 [style=solid label="','"]
  29 -> 32 [style=dashed label="more_args"]
  30 [label="30\nfunction -> FUN ID '(' args ')' . nl commands"]
  30 -> 18 [style=solid label="NL"]
  30 -> 33 [style=dashed label="nl"]
  31 [label="31\nmore_args -> ',' . args"]
  31 -> 27 [style=solid label="ID"]
  31 -> 34 [style=dashed label="args"]
  31 -> 29 [style=dashed label="arg"]
  32 [label="32\nargs -> arg more_args ."]
  33 [label="33\nfunction -> FUN ID '(' args ')' nl . commands"]
  33 -> 35 [style=solid label="LABEL"]
  33 -> 36 [style=dashed label="commands"]
  33 -> 37 [style=dashed label="label"]
  34 [label="34\nmore_args -> ',' args ."]
  35 [label="35\nlabel -> LABEL . ':' opt_nl label"]
  35 -> 38 [style=solid label="':'"]
  36 [label="36\nfunction -> FUN ID '(' args ')' nl commands ."]
  37 [label="37\ncommands -> label . command nl commands"]
  37 -> 39 [style=solid label="ID"]
  37 -> 40 [style=solid label="IF"]
  37 -> 41 [style=solid label="IFFALSE"]
  37 -> 42 [style=solid label="GOTO"]
  37 -> 43 [style=solid label="PARAM"]
  37 -> 44 [style=solid label="RET"]
  37 -> 45 [style=dashed label="command"]
  37 -> 46 [style=dashed label="call"]
  37 -> 47 [style=dashed label="params"]
  37 -> 48 [style=dashed label="param"]
  38 [label="38\nlabel -> LABEL ':' . opt_nl label"]
  38 -> 23 [style=solid label="NL"]
  38 -> 49 [style=dashed label="opt_nl"]
  39 [label="39\ncommand -> ID . '=' rval\ncommand -> ID . '=' BYTE rval\ncommand -> ID . '=' rval binop rval\ncommand -> ID . '=' unop rval\ncommand -> ID . '=' ID '[' rval ']'\ncommand -> ID . '[' rval ']' '=' rval\ncommand -> ID . '=' BYTE ID '[' rval ']'\ncommand -> ID . '[' rval ']' '=' BYTE rval"]
  39 -> 50 [style=solid label="'='"]
  39 -> 51 [style=solid label="'['"]
  40 [label="40\ncommand -> IF . rval GOTO LABEL"]
  40 -> 52 [style=solid label="ID"]
  40 -> 53 [style=solid label="LITNUM"]
  40 -> 54 [style=dashed label="rval"]
  41 [label="41\ncommand -> IFFALSE . rval GOTO LABEL"]
  41 -> 52 [style=solid label="ID"]
  41 -> 53 [style=solid label="LITNUM"]
  41 -> 55 [style=dashed label="rval"]
  42 [label="42\ncommand -> GOTO . LABEL"]
  42 -> 56 [style=solid label="LABEL"]
  43 [label="43\nparam -> PARAM . rval"]
  43 -> 52 [style=solid label="ID"]
  43 -> 53 [style=solid label="LITNUM"]
  43 -> 57 [style=dashed label="rval"]
  44 [label="44\ncommand -> RET . rval\ncommand -> RET ."]
  44 -> 52 [style=solid label="ID"]
  44 -> 53 [style=solid label="LITNUM"]
  44 -> 58 [style=dashed label="rval"]
  45 [label="45\ncommands -> label command . nl commands"]
  45 -> 18 [style=solid label="NL"]
  45 -> 59 [style=dashed label="nl"]
  46 [label="46\ncommand -> call ."]
  47 [label="47\ncall -> params . CALL ID"]
  47 -> 60 [style=solid label="CALL"]
  48 [label="48\nparams -> param . nl params"]
  48 -> 18 [style=solid label="NL"]
  48 -> 61 [style=dashed label="nl"]
  49 [label="49\nlabel -> LABEL ':' opt_nl . label"]
  49 -> 35 [style=solid label="LABEL"]
  49 -> 62 [style=dashed label="label"]
  50 [label="50\ncommand -> ID '=' . rval\ncommand -> ID '=' . BYTE rval\ncommand -> ID '=' . rval binop rval\ncommand -> ID '=' . unop rval\ncommand -> ID '=' . ID '[' rval ']'\ncommand -> ID '=' . BYTE ID '[' rval ']'"]
  50 -> 63 [style=solid label="BYTE"]
  50 -> 64 [style=solid label="ID"]
  50 -> 65 [style=solid label="NEW"]
  50 -> 53 [style=solid label="LITNUM"]
  50 -> 66 [style=solid label="'-'"]
  50 -> 67 [style=dashed label="rval"]
  50 -> 68 [style=dashed label="unop"]
  51 [label="51\ncommand -> ID '[' . rval ']' '=' rval\ncommand -> ID '[' . rval ']' '=' BYTE rval"]
  51 -> 52 [style=solid label="ID"]
  51 -> 53 [style=solid label="LITNUM"]
  51 -> 69 [style=dashed label="rval"]
  52 [label="52\nrval -> ID ."]
  53 [label="53\nrval -> LITNUM ."]
  54 [label="54\ncommand -> IF rval . GOTO LABEL"]
  54 -> 70 [style=solid label="GOTO"]
  55 [label="55\ncommand -> IFFALSE rval . GOTO LABEL"]
  55 -> 71 [style=solid label="GOTO"]
  56 [label="56\ncommand -> GOTO LABEL ."]
  57 [label="57\nparam -> PARAM rval ."]
  58 [label="58\ncommand -> RET rval ."]
  59 [label="59\ncommands -> label command nl . commands"]
  59 -> 35 [style=solid label="LABEL"]
  59 -> 72 [style=dashed label="commands"]
  59 -> 37 [style=dashed label="label"]
  60 [label="60\ncall -> params CALL . ID"]
  60 -> 73 [style=solid label="ID"]
  61 [label="61\nparams -> param nl . params"]
  61 -> 43 [style=solid label="PARAM"]
  61 -> 74 [style=dashed label="params"]
  61 -> 48 [style=dashed label="param"]
  62 [label="62\nlabel -> LABEL ':' opt_nl label ."]
  63 [label="63\ncommand -> ID '=' BYTE . rval\ncommand -> ID '=' BYTE . ID '[' rval ']'"]
  63 -> 75 [style=solid label="ID"]
  63 -> 53 [style=solid label="LITNUM"]
  63 -> 76 [style=dashed label="rval"]
  64 [label="64\nrval -> ID .\ncommand -> ID '=' ID . '[' rval ']'"]
  64 -> 77 [style=solid label="'['"]
  65 [label="65\nunop -> NEW .\nunop -> NEW . BYTE"]
  65 -> 78 [style=solid label="BYTE"]
  66 [label="66\nunop -> '-' ."]
  67 [label="67\ncommand -> ID '=' rval .\ncommand -> ID '=' rval . binop rval"]
  67 -> 79 [style=solid label="EQ"]
  67 -> 80 [style=solid label="NE"]
  67 -> 81 [style=solid label="LE"]
  67 -> 82 [style=solid label="GE"]
  67 -> 83 [style=solid label="'<'"]
  67 -> 84 [style=solid label="'>'"]
  67 -> 85 [style=solid label="'+'"]
  67 -> 86 [style=solid label="'-'"]
  67 -> 87 [style=solid label="'*'"]
  67 -> 88 [style=solid label="'/'"]
  67 -> 89 [style=dashed label="binop"]
  68 [label="68\ncommand -> ID '=' unop . rval"]
  68 -> 52 [style=solid label="ID"]
  68 -> 53 [style=solid label="LITNUM"]
  68 -> 90 [style=dashed label="rval"]
  69 [label="69\ncommand -> ID '[' rval . ']' '=' rval\ncommand -> ID '[' rval . ']' '=' BYTE rval"]
  69 -> 91 [style=solid label="']'"]
  70 [label="70\ncommand -> IF rval GOTO . LABEL"]
  70 -> 92 [style=solid label="LABEL"]
  71 [label="71\ncommand -> IFFALSE rval GOTO . LABEL"]
  71 -> 93 [style=solid label="LABEL"]
  72 [label="72\ncommands -> label command nl commands ."]
  73 [label="73\ncall -> params CALL ID ."]
  74 [label="74\nparams -> param nl params ."]
  75 [label="75\nrval -> ID .\ncommand -> ID '=' BYTE ID . '[' rval ']'"]
  75 -> 94 [style=solid label="'['"]
  76 [label="76\ncommand -> ID '=' BYTE rval ."]
  77 [label="77\ncommand -> ID '=' ID '[' . rval ']'"]
  77 -> 52 [style=solid label="ID"]
  77 -> 53 [style=solid label="LITNUM"]
  77 -> 95 [style=dashed label="rval"]
  78 [label="78\nunop -> NEW BYTE ."]
  79 [label="79\nbinop -> EQ ."]
  80 [label="80\nbinop -> NE ."]
  81 [label="81\nbinop -> LE ."]
  82 [label="82\nbinop -> GE ."]
  83 [label="83\nbinop -> '<' ."]
  84 [label="84\nbinop -> '>' ."]
  85 [label="85\nbinop -> '+' ."]
  86 [label="86\nbinop -> '-' ."]
  87 [label="87\nbinop -> '*' ."]
  88 [label="88\nbinop -> '/' ."]
  89 [label="89\ncommand -> ID '=' rval binop . rval"]
  89 -> 52 [style=solid label="ID"]
  89 -> 53 [style=solid label="LITNUM"]
  89 -> 96 [style=dashed label="rval"]
  90 [label="90\ncommand -> ID '=' unop rval ."]
  91 [label="91\ncommand -> ID '[' rval ']' . '=' rval\ncommand -> ID '[' rval ']' . '=' BYTE rval"]
  91 -> 97 [style=solid label="'='"]
  92 [label="92\ncommand -> IF rval GOTO LABEL ."]
  93 [label="93\ncommand -> IFFALSE rval GOTO LABEL ."]
  94 [label="94\ncommand -> ID '=' BYTE ID '[' . rval ']'"]
  94 -> 52 [style=solid label="ID"]
  94 -> 53 [style=solid label="LITNUM"]
  94 -> 98 [style=dashed label="rval"]
  95 [label="95\ncommand -> ID '=' ID '[' rval . ']'"]
  95 -> 99 [style=solid label="']'"]
  96 [label="96\ncommand -> ID '=' rval binop rval ."]
  97 [label="97\ncommand -> ID '[' rval ']' '=' . rval\ncommand -> ID '[' rval ']' '=' . BYTE rval"]
  97 -> 100 [style=solid label="BYTE"]
  97 -> 52 [style=solid label="ID"]
  97 -> 53 [style=solid label="LITNUM"]
  97 -> 101 [style=dashed label="rval"]
  98 [label="98\ncommand -> ID '=' BYTE ID '[' rval . ']'"]
  98 -> 102 [style=solid label="']'"]
  99 [label="99\ncommand -> ID '=' ID '[' rval ']' ."]
  100 [label="100\ncommand -> ID '[' rval ']' '=' BYTE . rval"]
  100 -> 52 [style=solid label="ID"]
  100 -> 53 [style=solid label="LITNUM"]
  100 -> 103 [style=dashed label="rval"]
  101 [label="101\ncommand -> ID '[' rval ']' '=' rval ."]
  102 [label="102\ncommand -> ID '=' BYTE ID '[' rval ']' ."]
  103 [label="103\ncommand -> ID '[' rval ']' '=' BYTE rval ."]
}
