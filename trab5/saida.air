.data
id .string "bla"
zz .string "blo"
g: .int
h: .int
j: .int
.text
.globl f, g, h, i, j
f:
	pushl %ebp
	movl %esp, %ebp
	subl $4, %esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl $0, %ebx 
	popl %edi
	popl %esi
	popl %ebx
	movl %ebp, %esp
	popl %ebp
	ret
g:
	pushl %ebp
	movl %esp, %ebp
	subl $64, %esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl $0, %ebx 
	movl $0, %ecx 
.L1: 
	movl $0, %ebx 
	cmpl %ebx, $10
	jl .L4
	movl $0, %ecx 
	jmp .L5
.L4:
	movl $1, %ecx
.L5:
	cmpl %ecx, $0
	jne .L2
	movl $1, %ebx 
	addl $1, %ebx
	movl $0, %ecx 
	addl %ebx, %ecx
	movl $0, %edx 
	addl %edx, %ecx
	movl $0, %edi 
	addl $3, %edi
	movl $0, %esi 
	addl $91, %esi
	movsbl $0, %ecx 
	push 10
	call malloc
	movl %eax, %eax 
	movl $0, %ecx 
	movl $0, %edx 
	addl %edx, %ecx
	movl $0, %edx 
	movl %ebx, -48(%ebp)
	addl %ebx, %edx
	movl $0, %ebx 
	movb %ebx, (%edx)
	movl %ebx, -40(%ebp)
	movl $99, %ebx 
	movl $g, %ebx 
	addl $1, %ecx
	jmp .L1
.L2: 
	movl $id, %ebx 
	popl %edi
	popl %esi
	popl %ebx
	movl %ebp, %esp
	popl %ebp
	ret
h:
	pushl %ebp
	movl %esp, %ebp
	subl $24, %esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl $0, %ebx 
	movl $0, %ecx 
	cmpl %ecx, $1
	jne .L3
	movl $0, %ebx 
	pushl 40
	call malloc
	movl %eax, %eax 
	imul $4, %(null)
	imul $4, %(null)
	pushl %eax
	pushl %ecx
	pushl %edx
	pushl %(null)
	call f
	pop %edx
	pop %ecx
.L3: 
	popl %edi
	popl %esi
	popl %ebx
	movl %ebp, %esp
	popl %ebp
	ret
i:
	pushl %ebp
	movl %esp, %ebp
	subl $12, %esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl $0, %ebx 
	movl $0, %ecx 
	addl %ebx, %ecx
	movl $0, %edx 
	pushl %ecx
	pushl %edx
	call g
	pop %edx
	pop %ecx
	pushl %ecx
	pushl %edx
	call h
	pop %edx
	pop %ecx
	popl %edi
	popl %esi
	popl %ebx
	movl %ebp, %esp
	popl %ebp
	movl $12, %eax
	ret
j:
	pushl %ebp
	movl %esp, %ebp
	subl $12, %esp
	pushl %ebx
	pushl %esi
	pushl %edi
	movl $0, %ebx 
	movl $0, %ecx 
	movl $0, %edx 
	cmpl %ecx, %edx
	je .L6
	movl $0, %edi 
	jmp .L7
.L6:
	movl $1, %edi
.L7:
	cmpl %ecx, %edx
	jne .L8
	movl $0, %esi 
	jmp .L9
.L8:
	movl $1, %esi
.L9:
	cmpl %ecx, %edx
	jg .L10
	movl $0, %ebx 
	jmp .L11
.L10:
	movl $1, %ebx
.L11:
	cmpl %ecx, %edx
	jl .L12
	movl $0, %ebx 
	jmp .L13
.L12:
	movl $1, %ebx
.L13:
	cmpl %ecx, %edx
	jge .L14
	movl $0, %ebx 
	jmp .L15
.L14:
	movl $1, %ebx
.L15:
	cmpl %ecx, %edx
	jle .L16
	movl $0, %ebx 
	jmp .L17
.L16:
	movl $1, %ebx
.L17:
	addl %ecx, %edx
	subl %ecx, %edx
	imull %ecx, %edx
	movl %ecx, %eax 
	idivl %edx
	imul $-1, %ecx
	pushl %ecx
	pushl %edx
	call g
	pop %edx
	pop %ecx
	pushl %ecx
	pushl %edx
	call i
	pop %edx
	pop %ecx
	popl %edi
	popl %esi
	popl %ebx
	movl %ebp, %esp
	popl %ebp
	ret
