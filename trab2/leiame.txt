*****************************************
Aluna: Marina Leao Lucena
Professor: Hisham Muhammad
Matéria: Compiladores
Trabalho: Analisador sintático
*****************************************

*****************************************
Diretórios e arquivos:

	- Diretório testes
		- Diretório entrada
			- teste1.mg a teste34.mg
			- testeCorreto.mg
		- Diretório gabarito
			- teste1.mg.out.exp a teste34.mg.out.exp
			- testeCorreto.mg.out.exp
		- Diretório saida
	- main.c
	- analisadorLexico.l
	- analisadorSintatico.y
	- makefile
	- teste.sh
	- leiame.txt

*****************************************
Para executar o programa, siga os seguintes passos:

	- Abra o terminal
	- Navegue ao diretório do trabalho pelo terminal
	- Escreva no terminal o comando "make" e pressione enter para compilar o programa e criar o executável
	- Escreva no terminal o comando "sh testes.sh" para gerar as saídas e compará-las com o gabarito

*****************************************
Relatório do trabalho:

No trabalho foi implementado um analisador sintático para a linguagem mini-0.
Nele, foram retiradas as ambiguidades da gramática, fornecida no site da displina, transformando-a em uma gramática BNF e garantindo não haver conflitos na mesma.
Após essa garantia, o analisador léxico do trabalho anterior foi combinado ao analisador sintático e os dois foram testados juntos.
Foram feitos diversos testes para a captura de erros. Um deles estava completamente correto e foi o maior, tratando o máximo de situações possíveis que pudessem ocorrer em um programa em linguagem monga. Já os outros testes possuiam obrigatoriamente erros de sintaxe ou erros léxicos (dois testes para garantir que os erros léxicos ainda eram capturados). Eram testes mais curtos, já que ao encontrar um erro o programa interrompia sua execução.
Ao compilarmos o programa, um arquivo y.tab.h é gerado. Esse arquivo é incluído na main através do comando "#include" e nele está contido o enum com todos os tokens utilizados.




