Terminals unused in grammar

   ERROR


State 32 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: funcao lista_funcao

    2 lista_funcao: /* empty */
    3             | funcao lista_funcao

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params ')' nl entradas TK_END nl

    6 params: /* empty */
    7       | parametro lista_parametro

    8 lista_parametro: /* empty */
    9                | lista_parametro ',' parametro

   10 parametro: TK_ID ':' tipo

   11 entradas: TK_ID ':' tipo TK_LINE nl entradas
   12         | comando TK_LINE nl lista_comando
   13         | /* empty */

   14 tipo: tipobase
   15     | '[' ']' tipo

   16 tipobase: TK_INT
   17         | TK_CHAR
   18         | TK_BOOL
   19         | TK_STRING

   20 lista_comando: /* empty */
   21              | comando nl lista_comando

   22 comando: cmdif
   23        | cmdwhile
   24        | cmdatrib
   25        | cmdreturn
   26        | chamada

   27 cmdif: TK_IF exp nl lista_comando entradas_else TK_END

   28 entradas_else: TK_ELSE TK_IF exp TK_LINE lista_comando lista_else_if
   29              | TK_ELSE TK_LINE lista_comando lista_else
   30              | /* empty */

   31 lista_else_if: /* empty */
   32              | TK_ELSE TK_IF exp TK_LINE lista_comando lista_else_if

   33 lista_else: /* empty */
   34           | TK_ELSE TK_LINE lista_comando lista_else

   35 cmdwhile: TK_WHILE exp nl lista_comando TK_LOOP

   36 cmdatrib: TK_ID '=' exp

   37 chamada: TK_ID '(' lista_exp ')'

   38 lista_exp: /* empty */
   39          | exp sublista_exp

   40 sublista_exp: /* empty */
   41             | ',' exp sublista_exp

   42 cmdreturn: TK_RET exp
   43          | TK_RET

   44 nl: /* empty */
   45   | TK_LINE nl

   46 exp: exp_or

   47 exp_or: exp_and
   48       | exp_or TK_OR exp_and

   49 exp_and: exp_less
   50        | exp_and TK_AND exp_less

   51 exp_less: exp_add
   52         | exp_less '<' exp_add
   53         | exp_less '>' exp_add
   54         | exp_less '=' exp_add
   55         | exp_less TK_LESS_EQUAL exp_add
   56         | exp_less TK_GREATER_EQUAL exp_add
   57         | exp_less TK_NOT_EQUAL exp_add

   58 exp_add: exp_times
   59        | exp_add '+' exp_times
   60        | exp_add '-' exp_times

   61 exp_times: exp_un
   62          | exp_times '*' exp_un
   63          | exp_times '/' exp_un

   64 exp_un: TK_NOT exp_un
   65       | '-' exp_un
   66       | exp_fin

   67 exp_fin: TK_NUMINT
   68        | TK_LITERAL_STRING
   69        | TK_TRUE
   70        | TK_FALSE
   71        | TK_NEW tipo '[' exp ']'
   72        | TK_ID '(' lista_exp ')'
   73        | TK_ID
   74        | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 37 72 74
')' (41) 4 5 37 72 74
'*' (42) 62
'+' (43) 59
',' (44) 9 41
'-' (45) 60 65
'/' (47) 63
':' (58) 4 10 11
'<' (60) 52
'=' (61) 36 54
'>' (62) 53
'[' (91) 15 71
']' (93) 15 71
error (256)
TK_CHAR (258) 17
TK_INT (259) 16
TK_STRING (260) 19
TK_BOOL (261) 18
TK_TRUE (262) 69
TK_FALSE (263) 70
TK_NOT (264) 64
TK_WHILE (265) 35
TK_LOOP (266) 35
TK_IF (267) 27 28 32
TK_ELSE (268) 28 29 32 34
TK_END (269) 4 5 27
TK_NEW (270) 71
TK_RET (271) 42 43
TK_FUN (272) 4 5
TK_GREATER_EQUAL (273) 56
TK_LESS_EQUAL (274) 55
TK_NOT_EQUAL (275) 57
TK_AND (276) 50
TK_OR (277) 48
TK_NUMINT (278) 67
TK_ID (279) 4 5 10 11 36 37 72 73
TK_LITERAL_STRING (280) 68
TK_LINE (281) 11 12 28 29 32 34 45
ERROR (282)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
programa (42)
    on left: 1, on right: 0
lista_funcao (43)
    on left: 2 3, on right: 1 3
funcao (44)
    on left: 4 5, on right: 1 3
params (45)
    on left: 6 7, on right: 4 5
lista_parametro (46)
    on left: 8 9, on right: 7 9
parametro (47)
    on left: 10, on right: 7 9
entradas (48)
    on left: 11 12 13, on right: 4 5 11
tipo (49)
    on left: 14 15, on right: 4 10 11 15 71
tipobase (50)
    on left: 16 17 18 19, on right: 14
lista_comando (51)
    on left: 20 21, on right: 12 21 27 28 29 32 34 35
comando (52)
    on left: 22 23 24 25 26, on right: 12 21
cmdif (53)
    on left: 27, on right: 22
entradas_else (54)
    on left: 28 29 30, on right: 27
lista_else_if (55)
    on left: 31 32, on right: 28 32
lista_else (56)
    on left: 33 34, on right: 29 34
cmdwhile (57)
    on left: 35, on right: 23
cmdatrib (58)
    on left: 36, on right: 24
chamada (59)
    on left: 37, on right: 26
lista_exp (60)
    on left: 38 39, on right: 37 72
sublista_exp (61)
    on left: 40 41, on right: 39 41
cmdreturn (62)
    on left: 42 43, on right: 25
nl (63)
    on left: 44 45, on right: 4 5 11 12 21 27 35 45
exp (64)
    on left: 46, on right: 27 28 32 35 36 39 41 42 71 74
exp_or (65)
    on left: 47 48, on right: 46 48
exp_and (66)
    on left: 49 50, on right: 47 48 50
exp_less (67)
    on left: 51 52 53 54 55 56 57, on right: 49 50 52 53 54 55 56 57
exp_add (68)
    on left: 58 59 60, on right: 51 52 53 54 55 56 57 59 60
exp_times (69)
    on left: 61 62 63, on right: 58 59 60 62 63
exp_un (70)
    on left: 64 65 66, on right: 61 62 63 64 65
exp_fin (71)
    on left: 67 68 69 70 71 72 73 74, on right: 66


state 0

    0 $accept: . programa $end

    TK_FUN  shift, and go to state 1

    programa  go to state 2
    funcao    go to state 3


state 1

    4 funcao: TK_FUN . TK_ID '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN . TK_ID '(' params ')' nl entradas TK_END nl

    TK_ID  shift, and go to state 4


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 5


state 3

    1 programa: funcao . lista_funcao

    TK_FUN  shift, and go to state 1

    $default  reduce using rule 2 (lista_funcao)

    lista_funcao  go to state 6
    funcao        go to state 7


state 4

    4 funcao: TK_FUN TK_ID . '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID . '(' params ')' nl entradas TK_END nl

    '('  shift, and go to state 8


state 5

    0 $accept: programa $end .

    $default  accept


state 6

    1 programa: funcao lista_funcao .

    $default  reduce using rule 1 (programa)


state 7

    3 lista_funcao: funcao . lista_funcao

    TK_FUN  shift, and go to state 1

    $default  reduce using rule 2 (lista_funcao)

    lista_funcao  go to state 9
    funcao        go to state 7


state 8

    4 funcao: TK_FUN TK_ID '(' . params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' . params ')' nl entradas TK_END nl

    TK_ID  shift, and go to state 10

    $default  reduce using rule 6 (params)

    params     go to state 11
    parametro  go to state 12


state 9

    3 lista_funcao: funcao lista_funcao .

    $default  reduce using rule 3 (lista_funcao)


state 10

   10 parametro: TK_ID . ':' tipo

    ':'  shift, and go to state 13


state 11

    4 funcao: TK_FUN TK_ID '(' params . ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params . ')' nl entradas TK_END nl

    ')'  shift, and go to state 14


state 12

    7 params: parametro . lista_parametro

    $default  reduce using rule 8 (lista_parametro)

    lista_parametro  go to state 15


state 13

   10 parametro: TK_ID ':' . tipo

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 21
    tipobase  go to state 22


state 14

    4 funcao: TK_FUN TK_ID '(' params ')' . ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params ')' . nl entradas TK_END nl

    TK_LINE  shift, and go to state 23
    ':'      shift, and go to state 24

    $default  reduce using rule 44 (nl)

    nl  go to state 25


state 15

    7 params: parametro lista_parametro .
    9 lista_parametro: lista_parametro . ',' parametro

    ','  shift, and go to state 26

    $default  reduce using rule 7 (params)


state 16

   17 tipobase: TK_CHAR .

    $default  reduce using rule 17 (tipobase)


state 17

   16 tipobase: TK_INT .

    $default  reduce using rule 16 (tipobase)


state 18

   19 tipobase: TK_STRING .

    $default  reduce using rule 19 (tipobase)


state 19

   18 tipobase: TK_BOOL .

    $default  reduce using rule 18 (tipobase)


state 20

   15 tipo: '[' . ']' tipo

    ']'  shift, and go to state 27


state 21

   10 parametro: TK_ID ':' tipo .

    $default  reduce using rule 10 (parametro)


state 22

   14 tipo: tipobase .

    $default  reduce using rule 14 (tipo)


state 23

   45 nl: TK_LINE . nl

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 28


state 24

    4 funcao: TK_FUN TK_ID '(' params ')' ':' . tipo nl entradas TK_END nl

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 29
    tipobase  go to state 22


state 25

    5 funcao: TK_FUN TK_ID '(' params ')' nl . entradas TK_END nl

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 34
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    chamada    go to state 39
    cmdreturn  go to state 40


state 26

    9 lista_parametro: lista_parametro ',' . parametro

    TK_ID  shift, and go to state 10

    parametro  go to state 41


state 27

   15 tipo: '[' ']' . tipo

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 42
    tipobase  go to state 22


state 28

   45 nl: TK_LINE nl .

    $default  reduce using rule 45 (nl)


state 29

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo . nl entradas TK_END nl

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 43


state 30

   35 cmdwhile: TK_WHILE . exp nl lista_comando TK_LOOP

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 53
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 31

   27 cmdif: TK_IF . exp nl lista_comando entradas_else TK_END

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 61
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 32

   42 cmdreturn: TK_RET . exp
   43          | TK_RET .

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    TK_ID     [reduce using rule 43 (cmdreturn)]
    $default  reduce using rule 43 (cmdreturn)

    exp        go to state 62
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 33

   11 entradas: TK_ID . ':' tipo TK_LINE nl entradas
   36 cmdatrib: TK_ID . '=' exp
   37 chamada: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 63
    ':'  shift, and go to state 64
    '='  shift, and go to state 65


state 34

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas . TK_END nl

    TK_END  shift, and go to state 66


state 35

   12 entradas: comando . TK_LINE nl lista_comando

    TK_LINE  shift, and go to state 67


state 36

   22 comando: cmdif .

    $default  reduce using rule 22 (comando)


state 37

   23 comando: cmdwhile .

    $default  reduce using rule 23 (comando)


state 38

   24 comando: cmdatrib .

    $default  reduce using rule 24 (comando)


state 39

   26 comando: chamada .

    $default  reduce using rule 26 (comando)


state 40

   25 comando: cmdreturn .

    $default  reduce using rule 25 (comando)


state 41

    9 lista_parametro: lista_parametro ',' parametro .

    $default  reduce using rule 9 (lista_parametro)


state 42

   15 tipo: '[' ']' tipo .

    $default  reduce using rule 15 (tipo)


state 43

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl . entradas TK_END nl

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 68
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    chamada    go to state 39
    cmdreturn  go to state 40


state 44

   69 exp_fin: TK_TRUE .

    $default  reduce using rule 69 (exp_fin)


state 45

   70 exp_fin: TK_FALSE .

    $default  reduce using rule 70 (exp_fin)


state 46

   64 exp_un: TK_NOT . exp_un

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_un   go to state 69
    exp_fin  go to state 60


state 47

   71 exp_fin: TK_NEW . tipo '[' exp ']'

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 70
    tipobase  go to state 22


state 48

   67 exp_fin: TK_NUMINT .

    $default  reduce using rule 67 (exp_fin)


state 49

   72 exp_fin: TK_ID . '(' lista_exp ')'
   73        | TK_ID .

    '('  shift, and go to state 71

    $default  reduce using rule 73 (exp_fin)


state 50

   68 exp_fin: TK_LITERAL_STRING .

    $default  reduce using rule 68 (exp_fin)


state 51

   74 exp_fin: '(' . exp ')'

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 72
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 52

   65 exp_un: '-' . exp_un

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_un   go to state 73
    exp_fin  go to state 60


state 53

   35 cmdwhile: TK_WHILE exp . nl lista_comando TK_LOOP

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 74


state 54

   46 exp: exp_or .
   48 exp_or: exp_or . TK_OR exp_and

    TK_OR  shift, and go to state 75

    $default  reduce using rule 46 (exp)


state 55

   47 exp_or: exp_and .
   50 exp_and: exp_and . TK_AND exp_less

    TK_AND  shift, and go to state 76

    $default  reduce using rule 47 (exp_or)


state 56

   49 exp_and: exp_less .
   52 exp_less: exp_less . '<' exp_add
   53         | exp_less . '>' exp_add
   54         | exp_less . '=' exp_add
   55         | exp_less . TK_LESS_EQUAL exp_add
   56         | exp_less . TK_GREATER_EQUAL exp_add
   57         | exp_less . TK_NOT_EQUAL exp_add

    TK_GREATER_EQUAL  shift, and go to state 77
    TK_LESS_EQUAL     shift, and go to state 78
    TK_NOT_EQUAL      shift, and go to state 79
    '='               shift, and go to state 80
    '<'               shift, and go to state 81
    '>'               shift, and go to state 82

    $default  reduce using rule 49 (exp_and)


state 57

   51 exp_less: exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 51 (exp_less)


state 58

   58 exp_add: exp_times .
   62 exp_times: exp_times . '*' exp_un
   63          | exp_times . '/' exp_un

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 58 (exp_add)


state 59

   61 exp_times: exp_un .

    $default  reduce using rule 61 (exp_times)


state 60

   66 exp_un: exp_fin .

    $default  reduce using rule 66 (exp_un)


state 61

   27 cmdif: TK_IF exp . nl lista_comando entradas_else TK_END

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 87


state 62

   42 cmdreturn: TK_RET exp .

    $default  reduce using rule 42 (cmdreturn)


state 63

   37 chamada: TK_ID '(' . lista_exp ')'

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    $default  reduce using rule 38 (lista_exp)

    lista_exp  go to state 88
    exp        go to state 89
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 64

   11 entradas: TK_ID ':' . tipo TK_LINE nl entradas

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 90
    tipobase  go to state 22


state 65

   36 cmdatrib: TK_ID '=' . exp

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 91
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 66

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas TK_END . nl

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 92


state 67

   12 entradas: comando TK_LINE . nl lista_comando

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 93


state 68

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas . TK_END nl

    TK_END  shift, and go to state 94


state 69

   64 exp_un: TK_NOT exp_un .

    $default  reduce using rule 64 (exp_un)


state 70

   71 exp_fin: TK_NEW tipo . '[' exp ']'

    '['  shift, and go to state 95


state 71

   72 exp_fin: TK_ID '(' . lista_exp ')'

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    $default  reduce using rule 38 (lista_exp)

    lista_exp  go to state 96
    exp        go to state 89
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 72

   74 exp_fin: '(' exp . ')'

    ')'  shift, and go to state 97


state 73

   65 exp_un: '-' exp_un .

    $default  reduce using rule 65 (exp_un)


state 74

   35 cmdwhile: TK_WHILE exp nl . lista_comando TK_LOOP

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 99
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 75

   48 exp_or: exp_or TK_OR . exp_and

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_and    go to state 101
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 76

   50 exp_and: exp_and TK_AND . exp_less

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_less   go to state 102
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 77

   56 exp_less: exp_less TK_GREATER_EQUAL . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 103
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 78

   55 exp_less: exp_less TK_LESS_EQUAL . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 104
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 79

   57 exp_less: exp_less TK_NOT_EQUAL . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 105
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 80

   54 exp_less: exp_less '=' . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 106
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 81

   52 exp_less: exp_less '<' . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 107
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 82

   53 exp_less: exp_less '>' . exp_add

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_add    go to state 108
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 83

   59 exp_add: exp_add '+' . exp_times

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_times  go to state 109
    exp_un     go to state 59
    exp_fin    go to state 60


state 84

   60 exp_add: exp_add '-' . exp_times

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_times  go to state 110
    exp_un     go to state 59
    exp_fin    go to state 60


state 85

   62 exp_times: exp_times '*' . exp_un

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_un   go to state 111
    exp_fin  go to state 60


state 86

   63 exp_times: exp_times '/' . exp_un

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp_un   go to state 112
    exp_fin  go to state 60


state 87

   27 cmdif: TK_IF exp nl . lista_comando entradas_else TK_END

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 113
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 88

   37 chamada: TK_ID '(' lista_exp . ')'

    ')'  shift, and go to state 114


state 89

   39 lista_exp: exp . sublista_exp

    ','  shift, and go to state 115

    $default  reduce using rule 40 (sublista_exp)

    sublista_exp  go to state 116


state 90

   11 entradas: TK_ID ':' tipo . TK_LINE nl entradas

    TK_LINE  shift, and go to state 117


state 91

   36 cmdatrib: TK_ID '=' exp .

    $default  reduce using rule 36 (cmdatrib)


state 92

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas TK_END nl .

    $default  reduce using rule 5 (funcao)


state 93

   12 entradas: comando TK_LINE nl . lista_comando

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 118
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 94

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END . nl

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 119


state 95

   71 exp_fin: TK_NEW tipo '[' . exp ']'

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 120
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 96

   72 exp_fin: TK_ID '(' lista_exp . ')'

    ')'  shift, and go to state 121


state 97

   74 exp_fin: '(' exp ')' .

    $default  reduce using rule 74 (exp_fin)


state 98

   36 cmdatrib: TK_ID . '=' exp
   37 chamada: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 63
    '='  shift, and go to state 65


state 99

   35 cmdwhile: TK_WHILE exp nl lista_comando . TK_LOOP

    TK_LOOP  shift, and go to state 122


state 100

   21 lista_comando: comando . nl lista_comando

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 123


state 101

   48 exp_or: exp_or TK_OR exp_and .
   50 exp_and: exp_and . TK_AND exp_less

    TK_AND  shift, and go to state 76

    $default  reduce using rule 48 (exp_or)


state 102

   50 exp_and: exp_and TK_AND exp_less .
   52 exp_less: exp_less . '<' exp_add
   53         | exp_less . '>' exp_add
   54         | exp_less . '=' exp_add
   55         | exp_less . TK_LESS_EQUAL exp_add
   56         | exp_less . TK_GREATER_EQUAL exp_add
   57         | exp_less . TK_NOT_EQUAL exp_add

    TK_GREATER_EQUAL  shift, and go to state 77
    TK_LESS_EQUAL     shift, and go to state 78
    TK_NOT_EQUAL      shift, and go to state 79
    '='               shift, and go to state 80
    '<'               shift, and go to state 81
    '>'               shift, and go to state 82

    $default  reduce using rule 50 (exp_and)


state 103

   56 exp_less: exp_less TK_GREATER_EQUAL exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 56 (exp_less)


state 104

   55 exp_less: exp_less TK_LESS_EQUAL exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 55 (exp_less)


state 105

   57 exp_less: exp_less TK_NOT_EQUAL exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 57 (exp_less)


state 106

   54 exp_less: exp_less '=' exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 54 (exp_less)


state 107

   52 exp_less: exp_less '<' exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 52 (exp_less)


state 108

   53 exp_less: exp_less '>' exp_add .
   59 exp_add: exp_add . '+' exp_times
   60        | exp_add . '-' exp_times

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84

    $default  reduce using rule 53 (exp_less)


state 109

   59 exp_add: exp_add '+' exp_times .
   62 exp_times: exp_times . '*' exp_un
   63          | exp_times . '/' exp_un

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 59 (exp_add)


state 110

   60 exp_add: exp_add '-' exp_times .
   62 exp_times: exp_times . '*' exp_un
   63          | exp_times . '/' exp_un

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 60 (exp_add)


state 111

   62 exp_times: exp_times '*' exp_un .

    $default  reduce using rule 62 (exp_times)


state 112

   63 exp_times: exp_times '/' exp_un .

    $default  reduce using rule 63 (exp_times)


state 113

   27 cmdif: TK_IF exp nl lista_comando . entradas_else TK_END

    TK_ELSE  shift, and go to state 124

    $default  reduce using rule 30 (entradas_else)

    entradas_else  go to state 125


state 114

   37 chamada: TK_ID '(' lista_exp ')' .

    $default  reduce using rule 37 (chamada)


state 115

   41 sublista_exp: ',' . exp sublista_exp

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 126
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 116

   39 lista_exp: exp sublista_exp .

    $default  reduce using rule 39 (lista_exp)


state 117

   11 entradas: TK_ID ':' tipo TK_LINE . nl entradas

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 44 (nl)

    nl  go to state 127


state 118

   12 entradas: comando TK_LINE nl lista_comando .

    $default  reduce using rule 12 (entradas)


state 119

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END nl .

    $default  reduce using rule 4 (funcao)


state 120

   71 exp_fin: TK_NEW tipo '[' exp . ']'

    ']'  shift, and go to state 128


state 121

   72 exp_fin: TK_ID '(' lista_exp ')' .

    $default  reduce using rule 72 (exp_fin)


state 122

   35 cmdwhile: TK_WHILE exp nl lista_comando TK_LOOP .

    $default  reduce using rule 35 (cmdwhile)


state 123

   21 lista_comando: comando nl . lista_comando

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 129
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 124

   28 entradas_else: TK_ELSE . TK_IF exp TK_LINE lista_comando lista_else_if
   29              | TK_ELSE . TK_LINE lista_comando lista_else

    TK_IF    shift, and go to state 130
    TK_LINE  shift, and go to state 131


state 125

   27 cmdif: TK_IF exp nl lista_comando entradas_else . TK_END

    TK_END  shift, and go to state 132


state 126

   41 sublista_exp: ',' exp . sublista_exp

    ','  shift, and go to state 115

    $default  reduce using rule 40 (sublista_exp)

    sublista_exp  go to state 133


state 127

   11 entradas: TK_ID ':' tipo TK_LINE nl . entradas

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 134
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    chamada    go to state 39
    cmdreturn  go to state 40


state 128

   71 exp_fin: TK_NEW tipo '[' exp ']' .

    $default  reduce using rule 71 (exp_fin)


state 129

   21 lista_comando: comando nl lista_comando .

    $default  reduce using rule 21 (lista_comando)


state 130

   28 entradas_else: TK_ELSE TK_IF . exp TK_LINE lista_comando lista_else_if

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 135
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 131

   29 entradas_else: TK_ELSE TK_LINE . lista_comando lista_else

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 136
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 132

   27 cmdif: TK_IF exp nl lista_comando entradas_else TK_END .

    $default  reduce using rule 27 (cmdif)


state 133

   41 sublista_exp: ',' exp sublista_exp .

    $default  reduce using rule 41 (sublista_exp)


state 134

   11 entradas: TK_ID ':' tipo TK_LINE nl entradas .

    $default  reduce using rule 11 (entradas)


state 135

   28 entradas_else: TK_ELSE TK_IF exp . TK_LINE lista_comando lista_else_if

    TK_LINE  shift, and go to state 137


state 136

   29 entradas_else: TK_ELSE TK_LINE lista_comando . lista_else

    TK_ELSE  shift, and go to state 138

    $default  reduce using rule 33 (lista_else)

    lista_else  go to state 139


state 137

   28 entradas_else: TK_ELSE TK_IF exp TK_LINE . lista_comando lista_else_if

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 140
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 138

   34 lista_else: TK_ELSE . TK_LINE lista_comando lista_else

    TK_LINE  shift, and go to state 141


state 139

   29 entradas_else: TK_ELSE TK_LINE lista_comando lista_else .

    $default  reduce using rule 29 (entradas_else)


state 140

   28 entradas_else: TK_ELSE TK_IF exp TK_LINE lista_comando . lista_else_if

    TK_ELSE  shift, and go to state 142

    $default  reduce using rule 31 (lista_else_if)

    lista_else_if  go to state 143


state 141

   34 lista_else: TK_ELSE TK_LINE . lista_comando lista_else

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 144
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 142

   32 lista_else_if: TK_ELSE . TK_IF exp TK_LINE lista_comando lista_else_if

    TK_IF  shift, and go to state 145


state 143

   28 entradas_else: TK_ELSE TK_IF exp TK_LINE lista_comando lista_else_if .

    $default  reduce using rule 28 (entradas_else)


state 144

   34 lista_else: TK_ELSE TK_LINE lista_comando . lista_else

    TK_ELSE  shift, and go to state 138

    $default  reduce using rule 33 (lista_else)

    lista_else  go to state 146


state 145

   32 lista_else_if: TK_ELSE TK_IF . exp TK_LINE lista_comando lista_else_if

    TK_TRUE            shift, and go to state 44
    TK_FALSE           shift, and go to state 45
    TK_NOT             shift, and go to state 46
    TK_NEW             shift, and go to state 47
    TK_NUMINT          shift, and go to state 48
    TK_ID              shift, and go to state 49
    TK_LITERAL_STRING  shift, and go to state 50
    '('                shift, and go to state 51
    '-'                shift, and go to state 52

    exp        go to state 147
    exp_or     go to state 54
    exp_and    go to state 55
    exp_less   go to state 56
    exp_add    go to state 57
    exp_times  go to state 58
    exp_un     go to state 59
    exp_fin    go to state 60


state 146

   34 lista_else: TK_ELSE TK_LINE lista_comando lista_else .

    $default  reduce using rule 34 (lista_else)


state 147

   32 lista_else_if: TK_ELSE TK_IF exp . TK_LINE lista_comando lista_else_if

    TK_LINE  shift, and go to state 148


state 148

   32 lista_else_if: TK_ELSE TK_IF exp TK_LINE . lista_comando lista_else_if

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 98

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 149
    comando        go to state 100
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    chamada        go to state 39
    cmdreturn      go to state 40


state 149

   32 lista_else_if: TK_ELSE TK_IF exp TK_LINE lista_comando . lista_else_if

    TK_ELSE  shift, and go to state 142

    $default  reduce using rule 31 (lista_else_if)

    lista_else_if  go to state 150


state 150

   32 lista_else_if: TK_ELSE TK_IF exp TK_LINE lista_comando lista_else_if .

    $default  reduce using rule 32 (lista_else_if)
