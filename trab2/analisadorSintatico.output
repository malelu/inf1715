Terminals unused in grammar

   ERROR


Grammar

    0 $accept: programa $end

    1 programa: funcao lista_funcao

    2 lista_funcao: /* empty */
    3             | funcao lista_funcao

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params ')' nl entradas TK_END nl

    6 params: /* empty */
    7       | parametro lista_parametro

    8 lista_parametro: /* empty */
    9                | lista_parametro ',' parametro

   10 parametro: TK_ID ':' tipo

   11 entradas: TK_ID ':' tipo nl entradas
   12         | comando nl lista_comando
   13         | /* empty */

   14 tipo: tipobase
   15     | '[' ']' tipo

   16 tipobase: TK_INT
   17         | TK_CHAR
   18         | TK_BOOL
   19         | TK_STRING

   20 lista_comando: /* empty */
   21              | comando nl lista_comando

   22 comando: cmdif
   23        | cmdwhile
   24        | cmdatrib
   25        | cmdreturn
   26        | chamada

   27 cmdif: TK_IF exp nl lista_comando entradas_else TK_END

   28 entradas_else: TK_ELSE TK_IF exp nl lista_comando entradas_else
   29              | TK_ELSE nl lista_comando
   30              | /* empty */

   31 cmdwhile: TK_WHILE exp nl lista_comando TK_LOOP

   32 cmdatrib: var '=' exp

   33 var: TK_ID
   34    | var '[' exp ']'

   35 chamada: TK_ID '(' lista_exp ')'

   36 lista_exp: /* empty */
   37          | exp sublista_exp

   38 sublista_exp: /* empty */
   39             | ',' exp sublista_exp

   40 cmdreturn: TK_RET exp
   41          | TK_RET

   42 nl: TK_LINE
   43   | TK_LINE nl

   44 exp: exp_or

   45 exp_or: exp_and
   46       | exp_or TK_OR exp_and

   47 exp_and: exp_less
   48        | exp_and TK_AND exp_less

   49 exp_less: exp_add
   50         | exp_less '<' exp_add
   51         | exp_less '>' exp_add
   52         | exp_less '=' exp_add
   53         | exp_less TK_LESS_EQUAL exp_add
   54         | exp_less TK_GREATER_EQUAL exp_add
   55         | exp_less TK_NOT_EQUAL exp_add

   56 exp_add: exp_times
   57        | exp_add '+' exp_times
   58        | exp_add '-' exp_times

   59 exp_times: exp_un
   60          | exp_times '*' exp_un
   61          | exp_times '/' exp_un

   62 exp_un: TK_NOT exp_un
   63       | '-' exp_un
   64       | exp_fin

   65 exp_fin: TK_NUMINT
   66        | TK_LITERAL_STRING
   67        | TK_TRUE
   68        | TK_FALSE
   69        | TK_NEW '[' exp ']' tipo
   70        | TK_ID '(' lista_exp ')'
   71        | var
   72        | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 35 70 72
')' (41) 4 5 35 70 72
'*' (42) 60
'+' (43) 57
',' (44) 9 39
'-' (45) 58 63
'/' (47) 61
':' (58) 4 10 11
'<' (60) 50
'=' (61) 32 52
'>' (62) 51
'[' (91) 15 34 69
']' (93) 15 34 69
error (256)
TK_CHAR (258) 17
TK_INT (259) 16
TK_STRING (260) 19
TK_BOOL (261) 18
TK_TRUE (262) 67
TK_FALSE (263) 68
TK_NOT (264) 62
TK_WHILE (265) 31
TK_LOOP (266) 31
TK_IF (267) 27 28
TK_ELSE (268) 28 29
TK_END (269) 4 5 27
TK_NEW (270) 69
TK_RET (271) 40 41
TK_FUN (272) 4 5
TK_GREATER_EQUAL (273) 54
TK_LESS_EQUAL (274) 53
TK_NOT_EQUAL (275) 55
TK_AND (276) 48
TK_OR (277) 46
TK_NUMINT (278) 65
TK_ID (279) 4 5 10 11 33 35 70
TK_LITERAL_STRING (280) 66
TK_LINE (281) 42 43
ERROR (282)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
programa (42)
    on left: 1, on right: 0
lista_funcao (43)
    on left: 2 3, on right: 1 3
funcao (44)
    on left: 4 5, on right: 1 3
params (45)
    on left: 6 7, on right: 4 5
lista_parametro (46)
    on left: 8 9, on right: 7 9
parametro (47)
    on left: 10, on right: 7 9
entradas (48)
    on left: 11 12 13, on right: 4 5 11
tipo (49)
    on left: 14 15, on right: 4 10 11 15 69
tipobase (50)
    on left: 16 17 18 19, on right: 14
lista_comando (51)
    on left: 20 21, on right: 12 21 27 28 29 31
comando (52)
    on left: 22 23 24 25 26, on right: 12 21
cmdif (53)
    on left: 27, on right: 22
entradas_else (54)
    on left: 28 29 30, on right: 27 28
cmdwhile (55)
    on left: 31, on right: 23
cmdatrib (56)
    on left: 32, on right: 24
var (57)
    on left: 33 34, on right: 32 34 71
chamada (58)
    on left: 35, on right: 26
lista_exp (59)
    on left: 36 37, on right: 35 70
sublista_exp (60)
    on left: 38 39, on right: 37 39
cmdreturn (61)
    on left: 40 41, on right: 25
nl (62)
    on left: 42 43, on right: 4 5 11 12 21 27 28 29 31 43
exp (63)
    on left: 44, on right: 27 28 31 32 34 37 39 40 69 72
exp_or (64)
    on left: 45 46, on right: 44 46
exp_and (65)
    on left: 47 48, on right: 45 46 48
exp_less (66)
    on left: 49 50 51 52 53 54 55, on right: 47 48 50 51 52 53 54 55
exp_add (67)
    on left: 56 57 58, on right: 49 50 51 52 53 54 55 57 58
exp_times (68)
    on left: 59 60 61, on right: 56 57 58 60 61
exp_un (69)
    on left: 62 63 64, on right: 59 60 61 62 63
exp_fin (70)
    on left: 65 66 67 68 69 70 71 72, on right: 64


state 0

    0 $accept: . programa $end

    TK_FUN  shift, and go to state 1

    programa  go to state 2
    funcao    go to state 3


state 1

    4 funcao: TK_FUN . TK_ID '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN . TK_ID '(' params ')' nl entradas TK_END nl

    TK_ID  shift, and go to state 4


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 5


state 3

    1 programa: funcao . lista_funcao

    TK_FUN  shift, and go to state 1

    $default  reduce using rule 2 (lista_funcao)

    lista_funcao  go to state 6
    funcao        go to state 7


state 4

    4 funcao: TK_FUN TK_ID . '(' params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID . '(' params ')' nl entradas TK_END nl

    '('  shift, and go to state 8


state 5

    0 $accept: programa $end .

    $default  accept


state 6

    1 programa: funcao lista_funcao .

    $default  reduce using rule 1 (programa)


state 7

    3 lista_funcao: funcao . lista_funcao

    TK_FUN  shift, and go to state 1

    $default  reduce using rule 2 (lista_funcao)

    lista_funcao  go to state 9
    funcao        go to state 7


state 8

    4 funcao: TK_FUN TK_ID '(' . params ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' . params ')' nl entradas TK_END nl

    TK_ID  shift, and go to state 10

    $default  reduce using rule 6 (params)

    params     go to state 11
    parametro  go to state 12


state 9

    3 lista_funcao: funcao lista_funcao .

    $default  reduce using rule 3 (lista_funcao)


state 10

   10 parametro: TK_ID . ':' tipo

    ':'  shift, and go to state 13


state 11

    4 funcao: TK_FUN TK_ID '(' params . ')' ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params . ')' nl entradas TK_END nl

    ')'  shift, and go to state 14


state 12

    7 params: parametro . lista_parametro

    $default  reduce using rule 8 (lista_parametro)

    lista_parametro  go to state 15


state 13

   10 parametro: TK_ID ':' . tipo

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 21
    tipobase  go to state 22


state 14

    4 funcao: TK_FUN TK_ID '(' params ')' . ':' tipo nl entradas TK_END nl
    5       | TK_FUN TK_ID '(' params ')' . nl entradas TK_END nl

    TK_LINE  shift, and go to state 23
    ':'      shift, and go to state 24

    nl  go to state 25


state 15

    7 params: parametro lista_parametro .
    9 lista_parametro: lista_parametro . ',' parametro

    ','  shift, and go to state 26

    $default  reduce using rule 7 (params)


state 16

   17 tipobase: TK_CHAR .

    $default  reduce using rule 17 (tipobase)


state 17

   16 tipobase: TK_INT .

    $default  reduce using rule 16 (tipobase)


state 18

   19 tipobase: TK_STRING .

    $default  reduce using rule 19 (tipobase)


state 19

   18 tipobase: TK_BOOL .

    $default  reduce using rule 18 (tipobase)


state 20

   15 tipo: '[' . ']' tipo

    ']'  shift, and go to state 27


state 21

   10 parametro: TK_ID ':' tipo .

    $default  reduce using rule 10 (parametro)


state 22

   14 tipo: tipobase .

    $default  reduce using rule 14 (tipo)


state 23

   42 nl: TK_LINE .
   43   | TK_LINE . nl

    TK_LINE  shift, and go to state 23

    $default  reduce using rule 42 (nl)

    nl  go to state 28


state 24

    4 funcao: TK_FUN TK_ID '(' params ')' ':' . tipo nl entradas TK_END nl

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 29
    tipobase  go to state 22


state 25

    5 funcao: TK_FUN TK_ID '(' params ')' nl . entradas TK_END nl

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 34
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    var        go to state 39
    chamada    go to state 40
    cmdreturn  go to state 41


state 26

    9 lista_parametro: lista_parametro ',' . parametro

    TK_ID  shift, and go to state 10

    parametro  go to state 42


state 27

   15 tipo: '[' ']' . tipo

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 43
    tipobase  go to state 22


state 28

   43 nl: TK_LINE nl .

    $default  reduce using rule 43 (nl)


state 29

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo . nl entradas TK_END nl

    TK_LINE  shift, and go to state 23

    nl  go to state 44


state 30

   31 cmdwhile: TK_WHILE . exp nl lista_comando TK_LOOP

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 55
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 31

   27 cmdif: TK_IF . exp nl lista_comando entradas_else TK_END

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 63
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 32

   40 cmdreturn: TK_RET . exp
   41          | TK_RET .

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    $default  reduce using rule 41 (cmdreturn)

    var        go to state 54
    exp        go to state 64
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 33

   11 entradas: TK_ID . ':' tipo nl entradas
   33 var: TK_ID .
   35 chamada: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 65
    ':'  shift, and go to state 66

    $default  reduce using rule 33 (var)


state 34

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas . TK_END nl

    TK_END  shift, and go to state 67


state 35

   12 entradas: comando . nl lista_comando

    TK_LINE  shift, and go to state 23

    nl  go to state 68


state 36

   22 comando: cmdif .

    $default  reduce using rule 22 (comando)


state 37

   23 comando: cmdwhile .

    $default  reduce using rule 23 (comando)


state 38

   24 comando: cmdatrib .

    $default  reduce using rule 24 (comando)


state 39

   32 cmdatrib: var . '=' exp
   34 var: var . '[' exp ']'

    '['  shift, and go to state 69
    '='  shift, and go to state 70


state 40

   26 comando: chamada .

    $default  reduce using rule 26 (comando)


state 41

   25 comando: cmdreturn .

    $default  reduce using rule 25 (comando)


state 42

    9 lista_parametro: lista_parametro ',' parametro .

    $default  reduce using rule 9 (lista_parametro)


state 43

   15 tipo: '[' ']' tipo .

    $default  reduce using rule 15 (tipo)


state 44

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl . entradas TK_END nl

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 71
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    var        go to state 39
    chamada    go to state 40
    cmdreturn  go to state 41


state 45

   67 exp_fin: TK_TRUE .

    $default  reduce using rule 67 (exp_fin)


state 46

   68 exp_fin: TK_FALSE .

    $default  reduce using rule 68 (exp_fin)


state 47

   62 exp_un: TK_NOT . exp_un

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var      go to state 54
    exp_un   go to state 72
    exp_fin  go to state 62


state 48

   69 exp_fin: TK_NEW . '[' exp ']' tipo

    '['  shift, and go to state 73


state 49

   65 exp_fin: TK_NUMINT .

    $default  reduce using rule 65 (exp_fin)


state 50

   33 var: TK_ID .
   70 exp_fin: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 74

    $default  reduce using rule 33 (var)


state 51

   66 exp_fin: TK_LITERAL_STRING .

    $default  reduce using rule 66 (exp_fin)


state 52

   72 exp_fin: '(' . exp ')'

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 75
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 53

   63 exp_un: '-' . exp_un

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var      go to state 54
    exp_un   go to state 76
    exp_fin  go to state 62


state 54

   34 var: var . '[' exp ']'
   71 exp_fin: var .

    '['  shift, and go to state 69

    $default  reduce using rule 71 (exp_fin)


state 55

   31 cmdwhile: TK_WHILE exp . nl lista_comando TK_LOOP

    TK_LINE  shift, and go to state 23

    nl  go to state 77


state 56

   44 exp: exp_or .
   46 exp_or: exp_or . TK_OR exp_and

    TK_OR  shift, and go to state 78

    $default  reduce using rule 44 (exp)


state 57

   45 exp_or: exp_and .
   48 exp_and: exp_and . TK_AND exp_less

    TK_AND  shift, and go to state 79

    $default  reduce using rule 45 (exp_or)


state 58

   47 exp_and: exp_less .
   50 exp_less: exp_less . '<' exp_add
   51         | exp_less . '>' exp_add
   52         | exp_less . '=' exp_add
   53         | exp_less . TK_LESS_EQUAL exp_add
   54         | exp_less . TK_GREATER_EQUAL exp_add
   55         | exp_less . TK_NOT_EQUAL exp_add

    TK_GREATER_EQUAL  shift, and go to state 80
    TK_LESS_EQUAL     shift, and go to state 81
    TK_NOT_EQUAL      shift, and go to state 82
    '='               shift, and go to state 83
    '<'               shift, and go to state 84
    '>'               shift, and go to state 85

    $default  reduce using rule 47 (exp_and)


state 59

   49 exp_less: exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 49 (exp_less)


state 60

   56 exp_add: exp_times .
   60 exp_times: exp_times . '*' exp_un
   61          | exp_times . '/' exp_un

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 56 (exp_add)


state 61

   59 exp_times: exp_un .

    $default  reduce using rule 59 (exp_times)


state 62

   64 exp_un: exp_fin .

    $default  reduce using rule 64 (exp_un)


state 63

   27 cmdif: TK_IF exp . nl lista_comando entradas_else TK_END

    TK_LINE  shift, and go to state 23

    nl  go to state 90


state 64

   40 cmdreturn: TK_RET exp .

    $default  reduce using rule 40 (cmdreturn)


state 65

   35 chamada: TK_ID '(' . lista_exp ')'

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    $default  reduce using rule 36 (lista_exp)

    var        go to state 54
    lista_exp  go to state 91
    exp        go to state 92
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 66

   11 entradas: TK_ID ':' . tipo nl entradas

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 93
    tipobase  go to state 22


state 67

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas TK_END . nl

    TK_LINE  shift, and go to state 23

    nl  go to state 94


state 68

   12 entradas: comando nl . lista_comando

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 96
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 69

   34 var: var '[' . exp ']'

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 98
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 70

   32 cmdatrib: var '=' . exp

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 99
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 71

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas . TK_END nl

    TK_END  shift, and go to state 100


state 72

   62 exp_un: TK_NOT exp_un .

    $default  reduce using rule 62 (exp_un)


state 73

   69 exp_fin: TK_NEW '[' . exp ']' tipo

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 101
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 74

   70 exp_fin: TK_ID '(' . lista_exp ')'

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    $default  reduce using rule 36 (lista_exp)

    var        go to state 54
    lista_exp  go to state 102
    exp        go to state 92
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 75

   72 exp_fin: '(' exp . ')'

    ')'  shift, and go to state 103


state 76

   63 exp_un: '-' exp_un .

    $default  reduce using rule 63 (exp_un)


state 77

   31 cmdwhile: TK_WHILE exp nl . lista_comando TK_LOOP

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 104
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 78

   46 exp_or: exp_or TK_OR . exp_and

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_and    go to state 105
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 79

   48 exp_and: exp_and TK_AND . exp_less

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_less   go to state 106
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 80

   54 exp_less: exp_less TK_GREATER_EQUAL . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 107
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 81

   53 exp_less: exp_less TK_LESS_EQUAL . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 108
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 82

   55 exp_less: exp_less TK_NOT_EQUAL . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 109
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 83

   52 exp_less: exp_less '=' . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 110
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 84

   50 exp_less: exp_less '<' . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 111
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 85

   51 exp_less: exp_less '>' . exp_add

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_add    go to state 112
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 86

   57 exp_add: exp_add '+' . exp_times

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_times  go to state 113
    exp_un     go to state 61
    exp_fin    go to state 62


state 87

   58 exp_add: exp_add '-' . exp_times

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp_times  go to state 114
    exp_un     go to state 61
    exp_fin    go to state 62


state 88

   60 exp_times: exp_times '*' . exp_un

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var      go to state 54
    exp_un   go to state 115
    exp_fin  go to state 62


state 89

   61 exp_times: exp_times '/' . exp_un

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var      go to state 54
    exp_un   go to state 116
    exp_fin  go to state 62


state 90

   27 cmdif: TK_IF exp nl . lista_comando entradas_else TK_END

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 117
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 91

   35 chamada: TK_ID '(' lista_exp . ')'

    ')'  shift, and go to state 118


state 92

   37 lista_exp: exp . sublista_exp

    ','  shift, and go to state 119

    $default  reduce using rule 38 (sublista_exp)

    sublista_exp  go to state 120


state 93

   11 entradas: TK_ID ':' tipo . nl entradas

    TK_LINE  shift, and go to state 23

    nl  go to state 121


state 94

    5 funcao: TK_FUN TK_ID '(' params ')' nl entradas TK_END nl .

    $default  reduce using rule 5 (funcao)


state 95

   33 var: TK_ID .
   35 chamada: TK_ID . '(' lista_exp ')'

    '('  shift, and go to state 65

    $default  reduce using rule 33 (var)


state 96

   12 entradas: comando nl lista_comando .

    $default  reduce using rule 12 (entradas)


state 97

   21 lista_comando: comando . nl lista_comando

    TK_LINE  shift, and go to state 23

    nl  go to state 122


state 98

   34 var: var '[' exp . ']'

    ']'  shift, and go to state 123


state 99

   32 cmdatrib: var '=' exp .

    $default  reduce using rule 32 (cmdatrib)


state 100

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END . nl

    TK_LINE  shift, and go to state 23

    nl  go to state 124


state 101

   69 exp_fin: TK_NEW '[' exp . ']' tipo

    ']'  shift, and go to state 125


state 102

   70 exp_fin: TK_ID '(' lista_exp . ')'

    ')'  shift, and go to state 126


state 103

   72 exp_fin: '(' exp ')' .

    $default  reduce using rule 72 (exp_fin)


state 104

   31 cmdwhile: TK_WHILE exp nl lista_comando . TK_LOOP

    TK_LOOP  shift, and go to state 127


state 105

   46 exp_or: exp_or TK_OR exp_and .
   48 exp_and: exp_and . TK_AND exp_less

    TK_AND  shift, and go to state 79

    $default  reduce using rule 46 (exp_or)


state 106

   48 exp_and: exp_and TK_AND exp_less .
   50 exp_less: exp_less . '<' exp_add
   51         | exp_less . '>' exp_add
   52         | exp_less . '=' exp_add
   53         | exp_less . TK_LESS_EQUAL exp_add
   54         | exp_less . TK_GREATER_EQUAL exp_add
   55         | exp_less . TK_NOT_EQUAL exp_add

    TK_GREATER_EQUAL  shift, and go to state 80
    TK_LESS_EQUAL     shift, and go to state 81
    TK_NOT_EQUAL      shift, and go to state 82
    '='               shift, and go to state 83
    '<'               shift, and go to state 84
    '>'               shift, and go to state 85

    $default  reduce using rule 48 (exp_and)


state 107

   54 exp_less: exp_less TK_GREATER_EQUAL exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 54 (exp_less)


state 108

   53 exp_less: exp_less TK_LESS_EQUAL exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 53 (exp_less)


state 109

   55 exp_less: exp_less TK_NOT_EQUAL exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 55 (exp_less)


state 110

   52 exp_less: exp_less '=' exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 52 (exp_less)


state 111

   50 exp_less: exp_less '<' exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 50 (exp_less)


state 112

   51 exp_less: exp_less '>' exp_add .
   57 exp_add: exp_add . '+' exp_times
   58        | exp_add . '-' exp_times

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 51 (exp_less)


state 113

   57 exp_add: exp_add '+' exp_times .
   60 exp_times: exp_times . '*' exp_un
   61          | exp_times . '/' exp_un

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 57 (exp_add)


state 114

   58 exp_add: exp_add '-' exp_times .
   60 exp_times: exp_times . '*' exp_un
   61          | exp_times . '/' exp_un

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 58 (exp_add)


state 115

   60 exp_times: exp_times '*' exp_un .

    $default  reduce using rule 60 (exp_times)


state 116

   61 exp_times: exp_times '/' exp_un .

    $default  reduce using rule 61 (exp_times)


state 117

   27 cmdif: TK_IF exp nl lista_comando . entradas_else TK_END

    TK_ELSE  shift, and go to state 128

    $default  reduce using rule 30 (entradas_else)

    entradas_else  go to state 129


state 118

   35 chamada: TK_ID '(' lista_exp ')' .

    $default  reduce using rule 35 (chamada)


state 119

   39 sublista_exp: ',' . exp sublista_exp

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 130
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 120

   37 lista_exp: exp sublista_exp .

    $default  reduce using rule 37 (lista_exp)


state 121

   11 entradas: TK_ID ':' tipo nl . entradas

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 33

    $default  reduce using rule 13 (entradas)

    entradas   go to state 131
    comando    go to state 35
    cmdif      go to state 36
    cmdwhile   go to state 37
    cmdatrib   go to state 38
    var        go to state 39
    chamada    go to state 40
    cmdreturn  go to state 41


state 122

   21 lista_comando: comando nl . lista_comando

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 132
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 123

   34 var: var '[' exp ']' .

    $default  reduce using rule 34 (var)


state 124

    4 funcao: TK_FUN TK_ID '(' params ')' ':' tipo nl entradas TK_END nl .

    $default  reduce using rule 4 (funcao)


state 125

   69 exp_fin: TK_NEW '[' exp ']' . tipo

    TK_CHAR    shift, and go to state 16
    TK_INT     shift, and go to state 17
    TK_STRING  shift, and go to state 18
    TK_BOOL    shift, and go to state 19
    '['        shift, and go to state 20

    tipo      go to state 133
    tipobase  go to state 22


state 126

   70 exp_fin: TK_ID '(' lista_exp ')' .

    $default  reduce using rule 70 (exp_fin)


state 127

   31 cmdwhile: TK_WHILE exp nl lista_comando TK_LOOP .

    $default  reduce using rule 31 (cmdwhile)


state 128

   28 entradas_else: TK_ELSE . TK_IF exp nl lista_comando entradas_else
   29              | TK_ELSE . nl lista_comando

    TK_IF    shift, and go to state 134
    TK_LINE  shift, and go to state 23

    nl  go to state 135


state 129

   27 cmdif: TK_IF exp nl lista_comando entradas_else . TK_END

    TK_END  shift, and go to state 136


state 130

   39 sublista_exp: ',' exp . sublista_exp

    ','  shift, and go to state 119

    $default  reduce using rule 38 (sublista_exp)

    sublista_exp  go to state 137


state 131

   11 entradas: TK_ID ':' tipo nl entradas .

    $default  reduce using rule 11 (entradas)


state 132

   21 lista_comando: comando nl lista_comando .

    $default  reduce using rule 21 (lista_comando)


state 133

   69 exp_fin: TK_NEW '[' exp ']' tipo .

    $default  reduce using rule 69 (exp_fin)


state 134

   28 entradas_else: TK_ELSE TK_IF . exp nl lista_comando entradas_else

    TK_TRUE            shift, and go to state 45
    TK_FALSE           shift, and go to state 46
    TK_NOT             shift, and go to state 47
    TK_NEW             shift, and go to state 48
    TK_NUMINT          shift, and go to state 49
    TK_ID              shift, and go to state 50
    TK_LITERAL_STRING  shift, and go to state 51
    '('                shift, and go to state 52
    '-'                shift, and go to state 53

    var        go to state 54
    exp        go to state 138
    exp_or     go to state 56
    exp_and    go to state 57
    exp_less   go to state 58
    exp_add    go to state 59
    exp_times  go to state 60
    exp_un     go to state 61
    exp_fin    go to state 62


state 135

   29 entradas_else: TK_ELSE nl . lista_comando

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 139
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 136

   27 cmdif: TK_IF exp nl lista_comando entradas_else TK_END .

    $default  reduce using rule 27 (cmdif)


state 137

   39 sublista_exp: ',' exp sublista_exp .

    $default  reduce using rule 39 (sublista_exp)


state 138

   28 entradas_else: TK_ELSE TK_IF exp . nl lista_comando entradas_else

    TK_LINE  shift, and go to state 23

    nl  go to state 140


state 139

   29 entradas_else: TK_ELSE nl lista_comando .

    $default  reduce using rule 29 (entradas_else)


state 140

   28 entradas_else: TK_ELSE TK_IF exp nl . lista_comando entradas_else

    TK_WHILE  shift, and go to state 30
    TK_IF     shift, and go to state 31
    TK_RET    shift, and go to state 32
    TK_ID     shift, and go to state 95

    $default  reduce using rule 20 (lista_comando)

    lista_comando  go to state 141
    comando        go to state 97
    cmdif          go to state 36
    cmdwhile       go to state 37
    cmdatrib       go to state 38
    var            go to state 39
    chamada        go to state 40
    cmdreturn      go to state 41


state 141

   28 entradas_else: TK_ELSE TK_IF exp nl lista_comando . entradas_else

    TK_ELSE  shift, and go to state 128

    $default  reduce using rule 30 (entradas_else)

    entradas_else  go to state 142


state 142

   28 entradas_else: TK_ELSE TK_IF exp nl lista_comando entradas_else .

    $default  reduce using rule 28 (entradas_else)
